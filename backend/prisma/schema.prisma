// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// https://www.prisma.io/docs/orm/prisma-client/queries/transactions
generator client {
  provider = "prisma-client-js"
  output = "../DB/prisma-client"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model File {
  username String @db.VarChar(70)
  device String @db.VarChar(70)
  directory String @db.VarChar(255)
  uuid String @db.VarChar(36)
  origin String @unique @db.VarChar(36)
  filename String @db.VarChar(255)
  last_modified DateTime
  hashvalue String @db.Char(64)
  enc_hashvalue String @db.Char(64)
  versions Int 
  size BigInt
  salt String @db.VarChar(64)
  iv String @db.VarChar(64)
  versionedFiles FileVersion[]
  dirID String @db.VarChar(36)
  directoryID Directory @relation(fields: [dirID],references: [uuid])
  @@unique([username,device,directory,filename])
  // @@schema("files")
  @@index([device,directory]) 
}

model FileVersion {
  username String @db.VarChar(70)
  device String @db.VarChar(70)
  directory String @db.VarChar(255)
  uuid String @db.VarChar(36)
  origin String @db.VarChar(36)
  LatestFile File @relation(fields: [origin],references: [origin])
  filename String @db.VarChar(255)
  last_modified DateTime
  hashvalue String @db.Char(64)
  enc_hashvalue String @db.Char(64)
  versions Int 
  size BigInt
  salt String @db.VarChar(64)
  iv String @db.VarChar(64)
  @@unique([username,device,directory,filename,uuid])
  // @@schema("versions")
  @@index([origin])
}

model DeletedFile {
  username String @db.VarChar(70)
  device String @db.VarChar(70)
  directory String @db.VarChar(255)
  uuid String @db.VarChar(36)
  origin String @db.VarChar(36) @unique
  filename String @db.VarChar(255)
  last_modified DateTime
  hashvalue String @db.Char(64)
  enc_hashvalue String @db.Char(64)
  versions Int 
  size BigInt
  salt String @db.VarChar(64)
  iv String @db.VarChar(64)
  deletion_date DateTime
  deletion_type String @db.VarChar(6)
  dirID String @db.VarChar(36)
  directoryID DeletedDirectory @relation(fields: [dirID],references: [uuid])
  deletedFileVersions DeletedFileVersion[]
  @@unique([username,device,directory,filename])
  // @@schema("deleted_files")
  @@index([device,directory])
}

model DeletedFileVersion {
  username String @db.VarChar(70)
  device String @db.VarChar(70)
  directory String @db.VarChar(255)
  uuid String @db.VarChar(36)
  origin String @db.VarChar(36)
  filename String @db.VarChar(255)
  last_modified DateTime
  hashvalue String @db.Char(64)
  enc_hashvalue String @db.Char(64)
  versions Int 
  size BigInt
  salt String @db.VarChar(64)
  iv String @db.VarChar(64)
  deletion_date DateTime
  deletion_type String @db.VarChar(6)
  latest_deleted_file DeletedFile @relation(fields: [origin],references: [origin])
  @@unique([username,device,directory,filename,uuid])
  // @@schema("deleted_files")
  @@index([device,directory,origin])

}

model Directory {
  uuid String @unique() @db.VarChar(36)
  username String @db.VarChar(70)
  device String @db.VarChar(70)
  folder String @db.VarChar(255)
  path String @db.VarChar(255)
  created_at DateTime
  @@unique([username,device,folder,path])
  files File[] 
  // @@schema("directories")
  @@index([path])
}

model DeletedDirectory {
  uuid String @db.VarChar(36) @unique()
  username String @db.VarChar(70)
  device String @db.VarChar(70)
  folder String @db.VarChar(255)
  path String @db.VarChar(255)
  created_at DateTime
  deleted DateTime
  files DeletedFile[]
  rel_path String @db.VarChar(255)
  rel_name String @db.VarChar(255)
  @@unique([username,device,folder,path])
  // @@schema("deleted_directories")
  @@index([path])
}